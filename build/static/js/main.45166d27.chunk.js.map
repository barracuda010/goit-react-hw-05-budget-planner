{"version":3,"sources":["components/redux/types.js","components/redux/budget/budget/cashAddAction.js","components/shared/Form.js","components/shared/Label.js","components/shared/Input.js","components/shared/Button.js","components/BudgetForm.js","components/ExpenseForm.js","components/redux/budget/expense/expenseAction.js","components/redux/budget/expense/expenseSelector.js","components/ExpensesTable.js","components/Value.js","components/Values.js","components/App.js","components/redux/budget/budget/cashAddReducer.js","components/redux/budget/expense/expenseReducer.js","components/redux/rootReducer.js","components/redux/store.js","index.js"],"names":["types","CASH_ADD","CASH_EXPENSE","EXPENSE_REMOVE","addCash","budget","type","payload","StyledForm","styled","form","Form","onSubmit","children","StyledLabel","label","props","customStyles","Label","StyledInput","input","Input","value","onChange","name","StyledButton","button","Button","onClick","BudgetForm","state","handleChange","e","setState","target","handleSubmit","preventDefault","onSave","this","Component","connect","dispatch","ExpenseForm","amount","id","shortid","generate","expense","getBudget","store","getExpense","calculateTotalExpenses","reduce","acc","el","calculateBalance","Table","table","expenses","onRemove","deleteId","map","key","Container","div","isPositive","p","Amount","Value","section","balance","length","cashAddReducer","action","removeExpenseReducer","filter","rootReducer","combineReducers","cashExpenseReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"wQAMeA,EAND,CACZC,SAAU,WACVC,aAAc,eACdC,eAAgB,kBCMHC,EAPC,SAAAC,GAAM,MAAK,CACzBC,KAAMN,EAAMC,SACZM,QAAS,CACPF,Y,gTCDJ,IAAMG,EAAaC,IAAOC,KAAV,KAcDC,EAJF,SAAC,GAAD,QAAGC,gBAAH,MAAc,kBAAM,MAApB,EAA0BC,EAA1B,EAA0BA,SAA1B,OACX,kBAACL,EAAD,CAAYI,SAAUA,GAAWC,I,mKCXnC,IAAMC,EAAcL,IAAOM,MAAV,KAKb,SAAAC,GAAK,OAAIA,EAAMC,gBAUJC,EAPD,SAAC,GAAD,IAAGL,EAAH,EAAGA,SAAUI,EAAb,EAAaA,aAAb,OACZ,kBAACH,EAAD,CAAaG,aAAcA,GAAeJ,I,4RCT5C,IAAMM,EAAcV,IAAOW,MAAV,KA0BFC,EAXD,SAAC,GAAD,QACZf,YADY,MACL,QADK,MAEZgB,aAFY,MAEJ,GAFI,MAGZC,gBAHY,MAGD,kBAAM,MAHL,MAIZC,YAJY,MAIL,GAJK,SAKR,kBAACL,EAAD,CAAab,KAAMA,EAAMgB,MAAOA,EAAOC,SAAUA,EAAUC,KAAMA,K,yjBCpBvE,IAAMC,EAAehB,IAAOiB,OAAV,KA8BHC,EANA,SAAC,GAAD,QAAGrB,YAAH,MAAU,SAAV,MAAoBS,aAApB,MAA4B,GAA5B,MAAgCa,eAAhC,MAA0C,kBAAM,MAAhD,SACb,kBAACH,EAAD,CAAcnB,KAAMA,EAAMsB,QAASA,GAChCb,ICjBCc,E,2MAKJC,MAAQ,CACNzB,OAAQ,G,EAGV0B,aAAe,SAAAC,GACb,EAAKC,SAAS,CACZ5B,QAAS2B,EAAEE,OAAOZ,S,EAItBa,aAAe,SAAAH,GACbA,EAAEI,kBAGFC,EAFmB,EAAKrB,MAAhBqB,QACW,EAAKP,MAAhBzB,QAER,EAAK4B,SAAS,CAAE5B,OAAQ,K,wEAGhB,IACAA,EAAWiC,KAAKR,MAAhBzB,OACR,OACE,kBAAC,EAAD,CAAMO,SAAU0B,KAAKH,cACnB,kBAAC,EAAD,CAAOlB,aA/BE,8BA+BT,0BAEE,kBAAC,EAAD,CAAOX,KAAK,SAASgB,MAAOjB,EAAQkB,SAAUe,KAAKP,gBAGrD,kBAAC,EAAD,CAAQhB,MAAM,OAAOT,KAAK,gB,GAhCTiC,aA0CVC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCJ,OAAQ,SAAAhC,GAAM,OAAIoC,EAASrC,EAAQC,QAGtBmC,CAAkCX,G,yBCzC3Ca,E,2MAKJZ,MAAQ,CACNN,KAAM,GACNmB,OAAQ,G,EAGVZ,aAAe,SAAAC,GACb,EAAKC,SAAL,eACGD,EAAEE,OAAOV,KAAOQ,EAAEE,OAAOZ,S,EAI9Ba,aAAe,SAAAH,GACbA,EAAEI,iBADgB,IAEVC,EAAW,EAAKrB,MAAhBqB,OAFU,EAGO,EAAKP,MAC9BO,EAAO,CAAEb,KAJS,EAGVA,KACOmB,QAJG,EAGJA,OACkBC,GAAIC,IAAQC,aAC5C,EAAKb,SAAS,CAAET,KAAM,GAAImB,OAAQ,K,wEAG1B,IAAD,EACkBL,KAAKR,MAAtBN,EADD,EACCA,KAAMmB,EADP,EACOA,OACd,OACE,kBAAC,EAAD,CAAM/B,SAAU0B,KAAKH,cACnB,kBAAC,EAAD,CAAOlB,aAhCE,8BAgCT,qBAEE,kBAAC,EAAD,CACEX,KAAK,OACLkB,KAAK,OACLF,MAAOE,EACPD,SAAUe,KAAKP,gBAGnB,kBAAC,EAAD,CAAOd,aAzCE,8BAyCT,uBAEE,kBAAC,EAAD,CACEX,KAAK,SACLkB,KAAK,SACLF,MAAOqB,EACPpB,SAAUe,KAAKP,gBAInB,kBAAC,EAAD,CAAQhB,MAAM,MAAMT,KAAK,gB,GA/CPiC,aAyDXC,cAAQ,MAJI,SAAAC,GAAQ,MAAK,CACtCJ,OAAQ,SAAAhC,GAAM,OAAIoC,EC3DmB,CACrCnC,KAAMN,EAAME,aACZK,QAAS,CACPwC,QDwDqC1C,SAG1BmC,CAAkCE,GErEpCM,EAAY,SAAAC,GAAK,OAAIA,EAAM5C,QAC3B6C,EAAa,SAAAD,GAAK,OAAIA,EAAMF,SAE5BI,EAAyB,SAAAF,GAGpC,OAFqBC,EAAWD,GACPG,QAAO,SAACC,EAAKC,GAAN,OAAaD,EAAMC,EAAGX,SAAQ,IAInDY,EAAmB,SAAAN,GAAK,OACnCD,EAAUC,GAASE,EAAuBF,I,yQCJ5C,IAAMO,EAAQ/C,IAAOgD,MAAV,KAmDIjB,eAZS,SAAAS,GAAK,MAAK,CAChCS,SAAUR,EAAWD,OAGI,SAAAR,GAAQ,MAAK,CACtCkB,SAAU,SAAAf,GAAE,OAAIH,EFlDwB,CACxCnC,KAAMN,EAAMG,eACZI,QAAS,CACPqD,SE+CqChB,SAO1BJ,EAnCO,SAAC,GAAD,IAAGkB,EAAH,EAAGA,SAAUC,EAAb,EAAaA,SAAb,OACpB,kBAACH,EAAD,KACE,+BACE,4BACE,4CACA,8CACA,+BAGJ,+BACGE,EAASG,KAAI,gBAAGjB,EAAH,EAAGA,GAAIpB,EAAP,EAAOA,KAAMmB,EAAb,EAAaA,OAAb,OACZ,wBAAImB,IAAKlB,GACP,4BAAKpB,GACL,4BAAKmB,GACL,4BACE,kBAAC,EAAD,CAAQ5B,MAAM,SAASa,QAAS,kBAAM+B,EAASf,gB,kdCnC3D,IAAMmB,EAAYtD,IAAOuD,IAAV,KAGJ,SAAAhD,GAAK,OAAKA,EAAMiD,WAAa,UAAY,aAI9C/C,EAAQT,IAAOyD,EAAV,KAQLC,EAAS1D,IAAOyD,EAAV,KAiBGE,EAXD,SAAC,GAAD,IAAGrD,EAAH,EAAGA,MAAOO,EAAV,EAAUA,MAAO2C,EAAjB,EAAiBA,WAAjB,OACZ,kBAACF,EAAD,CAAWE,WAAYA,GACrB,kBAAC,EAAD,KAAQlD,GACR,kBAACoD,EAAD,KAAS7C,EAAT,W,2JCjBJ,IAAMyC,EAAYtD,IAAO4D,QAAV,KA0BA7B,eAZS,SAAAS,GAAK,MAAK,CAChC5C,OAAQ2C,EAAUC,GAClBS,SAAUP,EAAuBF,GACjCqB,QAASf,EAAiBN,MASbT,EApBA,SAAC,GAAD,IAAGnC,EAAH,EAAGA,OAAQqD,EAAX,EAAWA,SAAUY,EAArB,EAAqBA,QAArB,OACb,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAOvD,MAAM,SAASO,MAAOjB,EAAQ4D,YAAU,IAC/C,kBAAC,EAAD,CAAOlD,MAAM,WAAWO,MAAOoC,IAC/B,kBAAC,EAAD,CAAO3C,MAAM,UAAUO,MAAOgD,EAASL,WAAYK,GAAW,Q,8RCXlE,IAAMP,GAAYtD,IAAOuD,IAAV,KA0BAxB,gBAHS,SAAAS,GAAK,MAAK,CAChCS,SAAUR,EAAWD,MAERT,EAdH,SAAC,GAAkB,IAAhBkB,EAAe,EAAfA,SACb,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACCA,EAASa,OAAS,GAAK,kBAAC,EAAD,U,QCjBfC,GATQ,WAAwB,IAAvB1C,EAAsB,uDAAd,EAAG2C,EAAW,uCAC5C,OAAQA,EAAOnE,MACb,KAAKN,EAAMC,SACT,OAAO6B,EAAQ2C,EAAOlE,QAAQF,OAChC,QACE,OAAOyB,I,SCME4C,GAXc,WAAoC,IAAnC5C,EAAkC,uDAA1B,GAA0B,yCAApBxB,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAChD,OAAQD,GACN,KAAKN,EAAMG,eACT,OAAO2B,EAAM6C,QAAO,SAAArB,GAAE,OAAIA,EAAGV,KAAOrC,EAAQqD,YAE9C,KAAK5D,EAAME,aACT,MAAM,GAAN,oBAAW4B,GAAX,CAAkBvB,EAAQwC,UAC5B,QACE,OAAOjB,ICFE8C,GAJKC,aAAgB,CAClCxE,OAAQmE,GACRzB,QAAS+B,KCGI7B,GALD8B,aACZH,GACAI,OAAOC,8BAAgCD,OAAOC,gC,MCEhDC,IAASC,OACP,kBAAC,IAAD,CAAUlC,MAAOA,IACf,kBAAC,GAAD,OAEFmC,SAASC,eAAe,W","file":"static/js/main.45166d27.chunk.js","sourcesContent":["const types = {\n  CASH_ADD: 'CASH_ADD',\n  CASH_EXPENSE: 'CASH_EXPENSE',\n  EXPENSE_REMOVE: 'EXPENSE_REMOVE',\n};\n\nexport default types;\n","import types from '../../types';\n\nconst addCash = budget => ({\n  type: types.CASH_ADD,\n  payload: {\n    budget,\n  },\n});\n\nexport default addCash;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n  width: 100%;\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nconst Form = ({ onSubmit = () => null, children }) => (\n  <StyledForm onSubmit={onSubmit}>{children}</StyledForm>\n);\n\nexport default Form;\n\nForm.propTypes = {\n  onSubmit: PropTypes.func,\n}.isRequired;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledLabel = styled.label`\n  display: inline-block;\n  font-size: 20px;\n  color: #171718;\n  cursor: pointer;\n  ${props => props.customStyles}\n`;\n\nconst Label = ({ children, customStyles }) => (\n  <StyledLabel customStyles={customStyles}>{children}</StyledLabel>\n);\n\nLabel.propTypes = {\n  children: PropTypes.node,\n}.isRequired;\nexport default Label;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledInput = styled.input`\n  color: #171718;\n  font: inherit;\n  font-size: 1.2rem;\n  padding: 16px;\n  border-radius: 4px;\n  border: 1px solid #bdbdbd;\n  width: 100%;\n  outline: 0;\n\n  &:focus {\n    border: 1px solid #2b32b2;\n  }\n`;\n\nconst Input = ({\n  type = ' text',\n  value = '',\n  onChange = () => null,\n  name = '',\n}) => <StyledInput type={type} value={value} onChange={onChange} name={name} />;\n\nInput.propTypes = {\n  onChange: PropTypes.func,\n}.isRequired;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst StyledButton = styled.button`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  color: #fff;\n  background-color: #3f51b5;\n  border: 0;\n  outline: 0;\n  padding: 8px 24px;\n  border-radius: 4px;\n  cursor: pointer;\n  box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.05);\n  font: inherit;\n  text-transform: uppercase;\n  user-select: none;\n\n  transition: background-color 200ms ease-in-out;\n\n  &:hover {\n    box-shadow: 0px 2px 1px 1px rgba(0, 0, 0, 0.15);\n    background-color: #303f9f;\n  }\n`;\n\nconst Button = ({ type = 'button', label = '', onClick = () => null }) => (\n  <StyledButton type={type} onClick={onClick}>\n    {label}\n  </StyledButton>\n);\n\nexport default Button;\n\nButton.propTypes = {\n  type: PropTypes.shape({}),\n}.isRequired;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport addCash from './redux/budget/budget/cashAddAction';\nimport Form from './shared/Form';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass BudgetForm extends Component {\n  static propTypes = {\n    onSave: PropTypes.func,\n  }.isRequired;\n\n  state = {\n    budget: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      budget: +e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSave } = this.props;\n    const { budget } = this.state;\n    onSave(budget);\n    this.setState({ budget: 0 });\n  };\n\n  render() {\n    const { budget } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter your total budget\n          <Input type=\"number\" value={budget} onChange={this.handleChange} />\n        </Label>\n\n        <Button label=\"Save\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: budget => dispatch(addCash(budget)),\n});\n\nexport default connect(null, mapDispatchToProps)(BudgetForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\nimport Form from './shared/Form';\nimport { expenseCash } from './redux/budget/expense/expenseAction';\nimport Label from './shared/Label';\nimport Input from './shared/Input';\nimport Button from './shared/Button';\n\nconst labelStyles = `\n  margin-bottom: 16px;\n`;\n\nclass ExpenseForm extends Component {\n  static propTypes = {\n    onSave: PropTypes.func,\n  }.isRequired;\n\n  state = {\n    name: '',\n    amount: 0,\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { onSave } = this.props;\n    const { name, amount } = this.state;\n    onSave({ name, amount: +amount, id: shortid.generate() });\n    this.setState({ name: '', amount: 0 });\n  };\n\n  render() {\n    const { name, amount } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Label customStyles={labelStyles}>\n          Enter expense name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={this.handleChange}\n          />\n        </Label>\n        <Label customStyles={labelStyles}>\n          Enter expense amount\n          <Input\n            type=\"number\"\n            name=\"amount\"\n            value={amount}\n            onChange={this.handleChange}\n          />\n        </Label>\n\n        <Button label=\"Add\" type=\"submit\" />\n      </Form>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSave: budget => dispatch(expenseCash(budget)),\n});\n\nexport default connect(null, mapDispatchToProps)(ExpenseForm);\n","import types from '../../types';\n\nexport const removeExpense = deleteId => ({\n  type: types.EXPENSE_REMOVE,\n  payload: {\n    deleteId,\n  },\n});\n\nexport const expenseCash = expense => ({\n  type: types.CASH_EXPENSE,\n  payload: {\n    expense,\n  },\n});\n","// import { createSelector } from 'reselect';\n\nexport const getBudget = store => store.budget;\nexport const getExpense = store => store.expense;\n\nexport const calculateTotalExpenses = store => {\n  const totalExpense = getExpense(store);\n  const sum = totalExpense.reduce((acc, el) => acc + el.amount, 0);\n  return sum;\n};\n\nexport const calculateBalance = store =>\n  getBudget(store) - calculateTotalExpenses(store);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { removeExpense } from './redux/budget/expense/expenseAction';\nimport Button from './shared/Button';\nimport { getExpense } from './redux/budget/expense/expenseSelector';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  text-align: center;\n  width: 100%;\n\n  tr {\n    border-bottom: 1px solid #212121;\n  }\n\n  td,\n  th {\n    padding-top: 8px;\n    padding-bottom: 8px;\n  }\n`;\n\nconst ExpensesTable = ({ expenses, onRemove }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>Expense name</th>\n        <th>Expense amount</th>\n        <th />\n      </tr>\n    </thead>\n    <tbody>\n      {expenses.map(({ id, name, amount }) => (\n        <tr key={id}>\n          <td>{name}</td>\n          <td>{amount}</td>\n          <td>\n            <Button label=\"Delete\" onClick={() => onRemove(id)} />\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nconst mapStateToProps = store => ({\n  expenses: getExpense(store),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onRemove: id => dispatch(removeExpense(id)),\n});\n\nExpensesTable.propTypes = {\n  expenses: PropTypes.shape({}),\n  oRemove: PropTypes.func,\n}.isRequired;\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpensesTable);\n","import React from 'react';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nconst Container = styled.div`\n  text-align: center;\n  padding: 8px 24px;\n  color: ${props => (props.isPositive ? '#388E3C' : '#D32F2F')};\n  user-select: none;\n`;\n\nconst Label = styled.p`\n  margin-top: 0;\n  margin-bottom: 8px;\n  text-transform: uppercase;\n  font-weight: 500;\n  font-size: 24px;\n`;\n\nconst Amount = styled.p`\n  margin-top: 0;\n  margin-bottom: 0;\n  font-size: 48px;\n`;\n\nconst Value = ({ label, value, isPositive }) => (\n  <Container isPositive={isPositive}>\n    <Label>{label}</Label>\n    <Amount>{value}&nbsp;&#x24;</Amount>\n  </Container>\n);\nValue.propTypes = {\n  label: PropTypes.string,\n  value: PropTypes.number,\n  isPositive: PropTypes.bool,\n}.isRequired;\nexport default Value;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport {\n  calculateBalance,\n  getBudget,\n  calculateTotalExpenses,\n} from './redux/budget/expense/expenseSelector';\nimport Value from './Value';\n\nconst Container = styled.section`\n  display: inline-flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Values = ({ budget, expenses, balance }) => (\n  <Container>\n    <Value label=\"Budget\" value={budget} isPositive />\n    <Value label=\"Expenses\" value={expenses} />\n    <Value label=\"Balance\" value={balance} isPositive={balance >= 0} />\n  </Container>\n);\n\nconst mapStateToProps = store => ({\n  budget: getBudget(store),\n  expenses: calculateTotalExpenses(store),\n  balance: calculateBalance(store),\n});\n\nValues.propTypes = {\n  budget: PropTypes.number,\n  expenses: PropTypes.number,\n  balance: PropTypes.number,\n}.isRequired;\n\nexport default connect(mapStateToProps)(Values);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport BudgetForm from './BudgetForm';\nimport ExpenseForm from './ExpenseForm';\nimport ExpensesTable from './ExpensesTable';\nimport Values from './Values';\nimport { getExpense } from './redux/budget/expense/expenseSelector';\n\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: 340px 1fr;\n  align-items: flex-start;\n  grid-gap: 24px;\n  max-width: 960px;\n  padding-left: 16px;\n  padding-right: 16px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nconst App = ({ expenses }) => {\n  return (\n    <Container>\n      <BudgetForm />\n      <Values />\n      <ExpenseForm />\n      {expenses.length > 0 && <ExpensesTable />}\n    </Container>\n  );\n};\n\nconst mapStateToProps = store => ({\n  expenses: getExpense(store),\n});\nexport default connect(mapStateToProps)(App);\n\nApp.propTypes = {\n  expenses: PropTypes.shape({}),\n}.isRequired;\n","import types from '../../types';\n\nconst cashAddReducer = (state = 0, action) => {\n  switch (action.type) {\n    case types.CASH_ADD:\n      return state + action.payload.budget;\n    default:\n      return state;\n  }\n};\n\nexport default cashAddReducer;\n","import types from '../../types';\n\nconst removeExpenseReducer = (state = [], { type, payload }) => {\n  switch (type) {\n    case types.EXPENSE_REMOVE:\n      return state.filter(el => el.id !== payload.deleteId);\n\n    case types.CASH_EXPENSE:\n      return [...state, payload.expense];\n    default:\n      return state;\n  }\n};\nexport default removeExpenseReducer;\n","import { combineReducers } from 'redux';\nimport cashAddReducer from './budget/budget/cashAddReducer';\nimport cashExpenseReducer from './budget/expense/expenseReducer';\n\nconst rootReducer = combineReducers({\n  budget: cashAddReducer,\n  expense: cashExpenseReducer,\n});\nexport default rootReducer;\n","/* eslint-disable no-underscore-dangle */\nimport { createStore } from 'redux';\nimport rootReducer from './rootReducer';\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './components/App';\nimport store from './components/redux/store';\n\nimport './styles.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}